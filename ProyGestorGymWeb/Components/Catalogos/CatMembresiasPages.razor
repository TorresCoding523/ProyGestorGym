@page "/catalogos/Membresias"

<h3>Registro de Membresias</h3>

<br />
<RadzenButton Text="Agregar" Icon="add" ButtonStyle="ButtonStyle.Success" Click="(()=>Editar(new Membresias()))" />
<br />
<br />
<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="30" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@membresias" TItem="Membresias">
    <Columns>
        <RadzenDataGridColumn Property="IdMembresia" Title="ID" Width="50" />
        <RadzenDataGridColumn Property="Nombre" Title="Nombre" Width="50" />
        <RadzenDataGridColumn Property="Precio" Title="Precio" Width="50" />
        <RadzenDataGridColumn Property="Duracion" Title="Duracion" Width="50" />
        <RadzenDataGridColumn Property="Beneficios" Title="Beneficios" Width="50" />
        <RadzenDataGridColumn Title="Acciones">
            <Template Context="data">
                <RadzenButton Click="(()=>Editar(data))" ButtonStyle="ButtonStyle.Warning" Icon="edit" />
                <RadzenButton Click="(()=>Eliminar(data))" ButtonStyle="ButtonStyle.Danger" Icon="delete" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    MembresiasManager membresiasManager;
    List<Membresias> membresias;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        membresiasManager = FabricManager.MembresiasManager;
        ActualizarTabla();
    }

    void ActualizarTabla()
    {
        membresias = membresiasManager.ObtenerTodos().Result ?? new List<Membresias>();
        InvokeAsync(StateHasChanged);
    }

    async Task Editar(Membresias membresias)
    {
        string titulo = membresias.IdMembresia == 0 ? "Nueva Membresia" : $"Editar {membresias.Nombre}";
        var result = await dialogService.OpenAsync(titulo, ds =>

    @<RadzenStack Gap="1.5rem">
        <div class="row">
            <div class="col-4">Nombre</div>
            <div class="col-8">
                <RadzenTextBox @bind-Value="membresias.Nombre" Placeholder="Ej. Membresía Premium" class="w-100" />
            </div>
        </div>
        <div class="row">
            <div class="col-4">Precio</div>
            <div class="col-8">
                <RadzenNumeric @bind-Value="membresias.Precio" Placeholder="Ej. 499.99" Step="0.01" class="w-100" />
            </div>
        </div>
        <div class="row">
            <div class="col-4">Duración (días)</div>
            <div class="col-8">
                <RadzenNumeric @bind-Value="membresias.Duracion" Placeholder="Ej. 30" class="w-100" />
            </div>
        </div>
        <div class="row">
            <div class="col-4">Beneficios</div>
            <div class="col-8">
                <RadzenTextArea @bind-Value="membresias.Beneficios" Placeholder="Ej. Acceso a clases, descuentos..." class="w-100" />
            </div>
        </div>
        <div class="row">
            <div class="col-6"></div>
            <div class="col-3">
                <RadzenButton Text="Guardar" ButtonStyle="ButtonStyle.Primary" Click="(() => Guardar(membresias))" />
            </div>
            <div class="col-3">
                <RadzenButton Text="Cancelar" ButtonStyle="ButtonStyle.Secondary" Click="(() => dialogService.Close(false))" />
            </div>
        </div>
    </RadzenStack>


    , new DialogOptions()
    {
        Draggable = true,
        ShowClose = true,
        Resizable = true,
        Width = "600px",
        Height = "430px"
    });
    }

    async Task Guardar(Membresias membresias)
    {
        Membresias resultado;
        if (membresias.IdMembresia == 0)
        {
            resultado = await membresiasManager.Agregar(membresias);
        }
        else
        {
            resultado = await membresiasManager.Modificar(membresias);
        }

        if (resultado != null)
        {
            dialogService.Close(true);
            ActualizarTabla();
        }
        else
        {
            await dialogService.Alert(membresiasManager.Error, "Error al guardar");
        }
    }

    async Task Eliminar(Membresias membresias)
    {
        var r = await dialogService.Confirm($"¿Realmente deseas eliminar la Membresia '{membresias.Nombre}'?", "Advertencia",
            new ConfirmOptions() { OkButtonText = "Sí", CancelButtonText = "No" });

        if (r.Value)
        {
            var eliminado = await membresiasManager.Eliminar(membresias.IdMembresia.ToString());
            if (eliminado)
            {
                ActualizarTabla();
            }
        }
    }
}